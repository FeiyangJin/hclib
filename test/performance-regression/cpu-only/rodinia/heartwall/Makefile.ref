include $(HCLIB_ROOT)/../modules/system/inc/hclib_system.pre.mak
include $(HCLIB_ROOT)/include/hclib.mak
include $(HCLIB_ROOT)/../modules/system/inc/hclib_system.post.mak

ifdef OUTPUT
override OUTPUT = -DOUTPUT
endif

# link objects(binaries) together
heartwall.ref: main.ref.o ./AVI/avilib.o ./AVI/avimod.o
	g++ main.ref.o ./AVI/avilib.o ./AVI/avimod.o -lm -fopenmp -o heartwall.ref $(HCLIB_CXXFLAGS) $(HCLIB_LDFLAGS) $(HCLIB_LDLIBS)

# compile main function file into object (binary)
main.ref.o: main.ref.c define.ref.c kernel.ref.c
	gcc $(OUTPUT) main.ref.c -I./AVI -c -O3 -fopenmp $(HCLIB_CXXFLAGS)

./AVI/avilib.o ./AVI/avimod.o:
	cd AVI; make;

# delete all object files
clean:
	rm -f *.o AVI/*.o heartwall
